// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using System;
using System.Data;
using System.Linq;
using AtlasERP.Models;

namespace AtlasERP.Models
{
    public partial class atlasErpContext
    {

        [DbFunction("CalcularFecha", "dbo")]
        public static DateTime? CalcularFecha(string codFrecuencia, DateTime? fechaIngreso)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CantidadMaquinasMantenimiento", "dbo")]
        public static int? CantidadMaquinasMantenimiento(string codcrono, int? estado)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("obtenerDatosAgencia", "dbo")]
        public IQueryable<obtenerDatosAgenciaResult> obtenerDatosAgencia(string codcia, string codagencia)
        {
            return FromExpression(() => obtenerDatosAgencia(codcia, codagencia));
        }

        [DbFunction("ObtenerDatosAgenciaLocal", "dbo")]
        public IQueryable<ObtenerDatosAgenciaLocalResult> ObtenerDatosAgenciaLocal(int? localidadId, string zonificacion)
        {
            return FromExpression(() => ObtenerDatosAgenciaLocal(localidadId, zonificacion));
        }

        [DbFunction("ObtenerSiguienteValor", "dbo")]
        public static int? ObtenerSiguienteValor(int? codigo_secuencial)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        protected void OnModelCreatingGeneratedFunctions(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<obtenerDatosAgenciaResult>().HasNoKey();
            modelBuilder.Entity<ObtenerDatosAgenciaLocalResult>().HasNoKey();
        }
    }
}
